
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
@*<head>
    <meta name="viewport" content="width=device-width" />
    <title>404 Page</title>
    <link href="~/Content/404ErrorPage.css" rel="stylesheet" />
</head>
<body>
        <h1>Whoops!</h1>
        <h3>Something went wrong.</h3>
</body>*@

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>404 Horse</title>
    <link rel="stylesheet" type="text/css" href="/media/80c653e35195a108ea1bf94330da561cd7935d0c3a027980a2b1dd28/style.css" />
    <style>
        h2 {
            width: 100%;
            top: 2.5rem;
            left: 0;
            text-align: center;
            color: #7974bd;
            margin: 0;
            padding: 0;
            position: absolute;
        }

        }
    </style>
    <script src="http://code.jquery.com/jquery-1.12.4.min.js"
            integrity="sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ="
            crossorigin="anonymous"></script>
</head>
<body>
    <div class="page-container">
        <h1>Whoops!</h1>
        <h3>Something went wrong.</h3>
        <div id="horse404"></div>
    </div>
    <script src="http://brangerbriz.net/labs/threejs_playGnd/js/three.min.js"></script>
    <script src="http://jeromeetienne.github.io/threex.windowresize/threex.windowresize.js"></script>
    <script src="http://mrdoob.github.io/three.js/examples/js/controls/TrackballControls.js"></script>
    <script type="text/javascript" src="http://learningthreejs.com/data/THREEx/THREEx.screenshot.js"></script>


    <body style='margin: 0px; background-color:#ffffff; overflow: hidden;'>



        <div id="ThreeJS" style="position: absolute; left:0px; top:0px"></div>
        <script>



	var W = window.innerWidth, H = window.innerHeight;
	renderer = new THREE.WebGLRenderer( { preserveDrawingBuffer: true } );
				renderer.autoClearColor = false;
	renderer.setSize( W, H );
	document.body.appendChild( renderer.domElement );
    var onRenderFcts= [];
	var scene	= new THREE.Scene();
    var controls;
    var mouse = new THREE.Vector2();
	var offset = new THREE.Vector3( 110, 10, 10 );
    var dataUrl = renderer.domElement.toDataURL("image/png" ,"DNA_Screen");


	var camera	= new THREE.PerspectiveCamera(115, window.innerWidth / window.innerHeight, 0.01, 1000);
	camera.position.z = 111;


	var controls = new THREE.TrackballControls( camera );

        controls.rotateSpeed = 4.03;
        controls.zoomSpeed = 1.2;
        controls.panSpeed = 0.8;

        controls.noZoom = false;
        controls.noPan = false;

        controls.staticMoving = false;
        controls.dynamicDampingFactor = .13;

        controls.keys = [ 65, 83, 68 ];

THREEx.Screenshot.bindKey(renderer);

// for ( var i = 0; i < 52; i ++ ) {

            var map = THREE.ImageUtils.loadTexture("http://i.imgur.com/35wpbog.png");geometry = new THREE.PlaneGeometry(1200, 1200, 1, 14);
var material = new THREE.MeshBasicMaterial({shading: THREE.FlatShading,  map: map, side: THREE.DoubleSide, transparent: true, opacity: 0.9, });
mesh = new THREE.Mesh(geometry, material);
map.wrapS = map.wrapT = THREE.RepeatWrapping;
map.repeat.set( 1, 1 );
scene.add(mesh);

					mesh.position.x = Math.random() * 1000 - 500;
					mesh.position.y = Math.random() * 1000 - 500;
					mesh.position.z = Math.random() * 1000 - 500;
					mesh.rotation.x = Math.random() * 2 * Math.PI;
					mesh.rotation.y = Math.random() * 2 * Math.PI;
					mesh.rotation.z = Math.random() * 2 * Math.PI;

					scene.add( mesh );





function draw() {
				requestAnimationFrame( draw );
				camera.position.y = Math.sin( Date.now() * 0.0001 ) * 50;

				camera.position.x = Math.sin( Date.now() * 0.0002 ) * 50;
			camera.lookAt(mesh.position);

mesh.rotation.x = Date.now() * 0.00005;
				mesh.rotation.y = Date.now() * 0.0002;
				mesh.rotation.z = Date.now() * 0.00001;
                 controls.update();
                 renderer.render( scene, camera );


			}

;(function(){
		// add a ambient light
		var light	= new THREE.AmbientLight( 0x0000ff )
		scene.add( light )
		// add a light in front
		var light	= new THREE.DirectionalLight('red', 3)
		light.position.set(11.5, 20.5, 2)
		scene.add( light )
		// add a light behind
		var light	= new THREE.DirectionalLight('pink', 12.75)
		light.position.set(-1.5, -0.5, -2)
		scene.add( light )
	})()





function onWindowResize() {

				camera.aspect = window.innerWidth / window.innerHeight;
				camera.updateProjectionMatrix();

				renderer.setSize( window.innerWidth, window.innerHeight );

				controls.handleResize();

				render();

			}


	onRenderFcts.push(function(){

				controls.update();

		renderer.render( scene, camera );
	})



	draw();


        </script>
    </body>
</body>

</html>
